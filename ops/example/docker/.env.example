##      ##    ###    ########  ##    ## #### ##    ##  ######   
##  ##  ##   ## ##   ##     ## ###   ##  ##  ###   ## ##    ##  
##  ##  ##  ##   ##  ##     ## ####  ##  ##  ####  ## ##        
##  ##  ## ##     ## ########  ## ## ##  ##  ## ## ## ##   #### 
##  ##  ## ######### ##   ##   ##  ####  ##  ##  #### ##    ##  
##  ##  ## ##     ## ##    ##  ##   ###  ##  ##   ### ##    ##  
 ###  ###  ##     ## ##     ## ##    ## #### ##    ##  ###### 

#Do not commit/push this file, since it has some secret values that are strictly private.



###########
#1. global#
###########

#Your project's name. Example: "MyOrg"
export PROJECT="<CHANGE_ME>"

#The name of the folder that you choose when you copied "testing" and renamed it. Example: qa						 	
export ENVIRONMENT=<CHANGE_ME>

#Example: 0.5.2									
export VERSION=<CHANGE_ME> 

#Your server's IP (where solution will be deployed). Example: "1.2.3.4"									
export SERVER_IP="<CHANGE_ME>"									
export DOCKER_HOST="ssh://app@${SERVER_IP}"

#Issuer's URL domain (by this moment, you will need to have it created on your DNS). Example: myorg.com.ar
export DOMAIN=<CHANGE_ME>

#DIDI Server API URL (default value is pointing to "QA" environment).									
export DIDI_SERVER_API=https://api.qa.didi.org.ar 	

#Use true for logs "debug" verbose level.
export DEBUGG_MODE=true

#Use true to enable some insecure endpoints for debugging. IMPORTANT: Always disable them on productive environment.								
export ENABLE_INSECURE_ENDPOINTS=true

#In case you are using Azure (or some similiar) to do some metrics. Example: e3b9a052-9e5a-4574-936f-4c14c4259495					
export APP_INSIGTHS_IKEY=<CHANGE_ME>

#Disable solution's client for sending telemetry to some provider (example: Azure). Use 0 to enable telemetry.						
export DISABLE_TELEMETRY_CLIENT=0								


#1.1. MongoDB
#############

export MONGO_PORT=27017

#MongoDB service name in docker-compose file:
export MONGO_DIR=mongo


#1.2. Blockchain
################

export BLOCKCHAIN_URL_MAIN=http://testnet.rsk.didi.org.ar:4444 				 #Main Bloackchain node (default value is pointing to DIDI's RSK one).
export BLOCKCHAIN_URL_RSK=http://testnet.rsk.didi.org.ar:4444				 #RSK Bloackchain node (default value is pointing to DIDI's one).
export BLOCKCHAIN_URL_LAC=http://mainnet.lacchain.didi.org.ar:4545			 #LAC Bloackchain node (default value is pointing to DIDI's one).
export BLOCKCHAIN_URL_BFA=http://prod.bfa.didi.org.ar:8545					 #BFA Bloackchain node (default value is pointing to DIDI's one).

export BLOCKCHAIN_CONTRACT_MAIN="0xdca7ef03e98e0dc2b855be647c39abe984fcf21b" #DID del Smart Contract *EthereumDIDRegistry* del proyecto *uPort* en la Blockchain del nodo "main".
export BLOCKCHAIN_CONTRACT_RSK="0xdca7ef03e98e0dc2b855be647c39abe984fcf21b"  #DID del Smart Contract en RSK.	
export BLOCKCHAIN_CONTRACT_LAC="0x488C83c4D1dDCF8f3696273eCcf0Ff4Cf54Bf277"  #DID del Smart Contract en LAC.	
export BLOCKCHAIN_CONTRACT_BFA="0x0b2b8e138c38f4ca844dc79d4c004256712de547"  #DID del Smart Contract en BFA.	



##########
#2. mongo#
##########

#MongoDB "rootdb":
export ADMIN_DB=rootdb

export ADMIN_DB_USER=administrator

#Example: KC6vYHSCJ47S2nCe
export ADMIN_DB_PASSWORD=<CHANGE_ME> 



###################
#3. issuer-backend#
###################

export DIDI_ISSUER_VERSION=${VERSION}

#Your issuer's name. Example: "MyOrg Issuer"
export DIDI_ISSUER_NAME="<CHANGE_ME>"			 

#Use "/deploy-tools/key-generator.js" to generate it. Example: "0xc7ab0362c18bb3e9d68af4854ffb91834759d6bf"
export DIDI_ISSUER_DID="<CHANGE_ME>"

#Use "/deploy-tools/key-generator.js" to generate it. Example: "v7z2pwhxnk4cvngnc55ahtz4fkxt9wqbw9vtjhde4jxen2jv5u3k23rkj5kd5gg6"		 	 
export DIDI_ISSUER_PRIVATE_KEY="<CHANGE_ME>"

#Use "/deploy-tools/key-generator.js" to generate it. IMPORTANT: Escape the "$" characters using "\".
#Example: '\$2f\$19\$apCG6jr2EU8GazgYbZAhde'	 
export DIDI_ISSUER_HASH_SALT='<CHANGE_ME>'	 	 
											 	 
#Use "/deploy-tools/key-generator.js" to generate it.
#Example: DIDI_ISSUER_RSA_PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----MIIEpQ (...) O3gOWA=-----END RSA PRIVATE KEY-----"
export DIDI_ISSUER_RSA_PRIVATE_KEY="<CHANGE_ME>" 

#IMPORTANT: Prior to do the deployment, you will have to create an "A" registry in your domain's DNS pointing to the next FQDN:
export DIDI_ISSUER_FQDN=api.issuer.${ENVIRONMENT}.${DOMAIN}
export DIDI_ISSUER_ADDRESS=https://${DIDI_ISSUER_FQDN}
export DIDI_ISSUER_FULL_URL="${DIDI_ISSUER_ADDRESS}"
export DIDI_ISSUER_API_URL=${DIDI_ISSUER_ADDRESS}

export DIDI_ISSUER_PORT=3500

export DIDI_ISSUER_ENABLE_INSECURE_ENDPOINTS=${ENABLE_INSECURE_ENDPOINTS}


#3.1. MongoDB: Issuer DB connector.
##############

#Example: myorg-issuer
export DIDI_ISSUER_MONGO_DB=<CHANGE_ME>

#Example: myorg-issuer-user		
export DIDI_ISSUER_MONGO_USERNAME=<CHANGE_ME>

#Example: 'XFuKKt493jwZmZNG'  
export DIDI_ISSUER_MONGO_PASSWORD='<CHANGE_ME>' 



####################
#4. issuer-frontend#
####################

export DIDI_ISSUER_FRONTEND_VERSION=${VERSION}

#IMPORTANT: Prior to do the deployment, you will have to create an "A" registry in your domain's DNS pointing to the next FQDN:
export DIDI_ISSUER_FRONTEND_FQDN=issuer.${ENVIRONMENT}.${DOMAIN}

#Normally, it will be the same as $DIDI_ISSUER_API_URL.
export DIDI_ISSUER_FRONTEND_API_URL=${DIDI_ISSUER_API_URL} 



##########
#5. proxy#
##########

#Mailbox to be used as input when SSL certificates are created. Example: info@myorg.com.ar
export POSTMASTER_MAILBOX=<CHANGE_ME>	


